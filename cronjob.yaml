apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    iam.gke.io/gcp-service-account: pypi-proxy-scan@knada-dev.iam.gserviceaccount.com
  name: pypi-proxy-scan
  namespace: monitoring
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pypi-proxy-scan
  namespace: monitoring
spec:
  egress:
  - ports:
    - port: 443
      protocol: TCP
    to:
    - ipBlock:
        cidr: 151.101.0.0/16 # pypi
  podSelector:
    matchLabels:
      app: pypi-proxy-scan
  policyTypes:
  - Egress
---
apiVersion: networking.gke.io/v1alpha3
kind: FQDNNetworkPolicy
metadata:
  name: pypi-proxy-scan-fqdn
  namespace: monitoring
spec:
  egress:
  - ports:
    - port: 443
      protocol: TCP
    to:
    - fqdns:
      - slack.com
      - hooks.slack.com
  podSelector:
    matchLabels:
      app: pypi-proxy-scan
  policyTypes:
  - Egress
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: pypi-proxy-scan
  namespace: monitoring
  labels:
    app: pypi-proxy-scan
spec:
  schedule: "0 8 * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: pypi-proxy-scan
        spec:
          restartPolicy: Never
          serviceAccountName: pypi-proxy-scan
          containers:
          - name: pypi-proxy-scan
            image: europe-north1-docker.pkg.dev/knada-gcp/knada-north/pypi-proxy-scan:v4
            env:
              - name: SLACK_CHANNEL
                value: "#nada-alerts-dev"
              - name: GAR_REPOSITORY_PATH
                value: "projects/knada-dev/locations/europe-north1/repositories/pypiproxy"
            envFrom:
              - secretRef:
                  name: nadabot-slack-token
